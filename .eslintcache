[{"D:\\Daniel\\Typescript React\\to-do-list React\\src\\index.tsx":"1","D:\\Daniel\\Typescript React\\to-do-list React\\src\\reportWebVitals.ts":"2","D:\\Daniel\\Typescript React\\to-do-list React\\src\\App.tsx":"3","D:\\Daniel\\Typescript React\\to-do-list React\\src\\components\\Form\\Form.tsx":"4","D:\\Daniel\\Typescript React\\to-do-list React\\src\\components\\Header\\Header.tsx":"5","D:\\Daniel\\Typescript React\\to-do-list React\\src\\components\\DatePicker\\DatePicker.tsx":"6"},{"size":472,"mtime":1608641514085,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":423,"mtime":1608401968140,"results":"10","hashOfConfig":"8"},{"size":2388,"mtime":1608655085246,"results":"11","hashOfConfig":"8"},{"size":576,"mtime":1608392218439,"results":"12","hashOfConfig":"8"},{"size":0,"mtime":1608644350728,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"lcv2p2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Daniel\\Typescript React\\to-do-list React\\src\\index.tsx",[],["29","30"],"D:\\Daniel\\Typescript React\\to-do-list React\\src\\reportWebVitals.ts",[],"D:\\Daniel\\Typescript React\\to-do-list React\\src\\App.tsx",[],"D:\\Daniel\\Typescript React\\to-do-list React\\src\\components\\Form\\Form.tsx",["31","32","33","34","35"],"import React ,{ useState, useEffect } from 'react'\r\nimport { FormGroup, InputGroup, TextArea } from '@blueprintjs/core';\r\nimport { DateInput } from '@blueprintjs/datetime';\r\nimport './Form.scss';\r\ninterface formData {\r\n    name: String,\r\n    description: String,\r\n    initDate: Date,\r\n    finishDate: Date\r\n}\r\nconst Form = () => {\r\n\r\n    const [dataTask, setDataTask] = useState({});\r\n    \r\n    const handleOnChange = ( e ) => {\r\n        console.log(\"cambiando..\");\r\n    }\r\n    return(\r\n        <div className = \"task-form\">\r\n            <h2>Agrega una nueva tarea</h2>\r\n            <FormGroup\r\n                label=\"Nombre de Tarea\"\r\n                labelFor=\"text-input\"\r\n            >\r\n                <InputGroup id=\"text-input\" placeholder=\"Placeholder text\" />\r\n            </FormGroup>\r\n\r\n            <FormGroup\r\n                helperText=\"Helper text with details...\"\r\n                label=\"Descripcion\"\r\n                labelFor=\"text-input\"\r\n                labelInfo=\"(required)\"\r\n            >\r\n                <TextArea\r\n                    growVertically={ true }\r\n                    large={ true }\r\n                    //intent={Intent.PRIMARY}\r\n                    //onChange={this.handleChange}\r\n                    //value={this.state.value}\r\n                />\r\n            </FormGroup>\r\n\r\n            <FormGroup\r\n                helperText=\"dia en que debes iniciar la tarea\"\r\n                label=\"fecha de nicio\"\r\n            >\r\n                <DateInput\r\n                    formatDate={date => date.toLocaleString()}\r\n                    //onChange={this.handleDateChange}\r\n                    parseDate={str => new Date(str)}\r\n                    defaultValue={new Date()}\r\n                    placeholder={\"M/D/YYYY\"}\r\n                    //value={this.state.date}\r\n                />\r\n            </FormGroup>\r\n\r\n            <FormGroup\r\n                helperText=\"dia en que debes terminar la tarea\"\r\n                label=\"fecha de finalizaciÃ³n\"\r\n            >\r\n                <DateInput\r\n                    formatDate={date => date.toLocaleString()}\r\n                    //onChange={this.handleDateChange}\r\n                    parseDate={str => new Date(str)}\r\n                    placeholder={\"M/D/YYYY\"}\r\n                    //value={this.state.date}\r\n                />\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","D:\\Daniel\\Typescript React\\to-do-list React\\src\\components\\Header\\Header.tsx",[],["36","37"],"D:\\Daniel\\Typescript React\\to-do-list React\\src\\components\\DatePicker\\DatePicker.tsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"46","line":5,"column":11,"nodeType":"44","messageId":"45","endLine":5,"endColumn":19},{"ruleId":"42","severity":1,"message":"47","line":13,"column":12,"nodeType":"44","messageId":"45","endLine":13,"endColumn":20},{"ruleId":"42","severity":1,"message":"48","line":13,"column":22,"nodeType":"44","messageId":"45","endLine":13,"endColumn":33},{"ruleId":"42","severity":1,"message":"49","line":15,"column":11,"nodeType":"44","messageId":"45","endLine":15,"endColumn":25},{"ruleId":"38","replacedBy":"50"},{"ruleId":"40","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'formData' is defined but never used.","'dataTask' is assigned a value but never used.","'setDataTask' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.",["52"],["53"],"no-global-assign","no-unsafe-negation"]